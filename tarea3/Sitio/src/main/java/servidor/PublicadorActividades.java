
package servidor;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import net.java.dev.jaxb.array.StringArray;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "PublicadorActividades", targetNamespace = "http://servidor/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    net.java.dev.jaxb.array.ObjectFactory.class,
    servidor.ObjectFactory.class
})
public interface PublicadorActividades {


    /**
     * 
     * @return
     *     returns servidor.DataActividadTuristicaArray
     * @throws ActividadNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasRequest", output = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasResponse", fault = {
        @FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadas/Fault/ActividadNoExisteException")
    })
    public DataActividadTuristicaArray obtenerActividadesConfirmadas()
        throws ActividadNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataPaqueteActividades
     * @throws NoExisteEntidadException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/consultarPaqueteRequest", output = "http://servidor/PublicadorActividades/consultarPaqueteResponse", fault = {
        @FaultAction(className = NoExisteEntidadException_Exception.class, value = "http://servidor/PublicadorActividades/consultarPaquete/Fault/NoExisteEntidadException")
    })
    public DataPaqueteActividades consultarPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExisteEntidadException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws ActividadNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/PublicadorActividades/finalizarActividadRequest", output = "http://servidor/PublicadorActividades/finalizarActividadResponse", fault = {
        @FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://servidor/PublicadorActividades/finalizarActividad/Fault/ActividadNoExisteException")
    })
    public void finalizarActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws ActividadNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://servidor/PublicadorActividades/updateVisitsActividadRequest", output = "http://servidor/PublicadorActividades/updateVisitsActividadResponse")
    public void updateVisitsActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataActividadTuristicaArray
     * @throws ActividadNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasDepartamentoRequest", output = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasDepartamentoResponse", fault = {
        @FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasDepartamento/Fault/ActividadNoExisteException")
    })
    public DataActividadTuristicaArray obtenerActividadesConfirmadasDepartamento(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws ActividadNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns servidor.DataActividadTuristicaArray
     * @throws ActividadNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasDepartamentoCategoriaRequest", output = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasDepartamentoCategoriaResponse", fault = {
        @FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://servidor/PublicadorActividades/obtenerActividadesConfirmadasDepartamentoCategoria/Fault/ActividadNoExisteException")
    })
    public DataActividadTuristicaArray obtenerActividadesConfirmadasDepartamentoCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws ActividadNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataActividadTuristicaArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerActividadesNoFinalizadasRequest", output = "http://servidor/PublicadorActividades/obtenerActividadesNoFinalizadasResponse")
    public DataActividadTuristicaArray obtenerActividadesNoFinalizadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns servidor.DataActividadTuristicaPArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerActividadesFinalizadasRequest", output = "http://servidor/PublicadorActividades/obtenerActividadesFinalizadasResponse")
    public DataActividadTuristicaPArray obtenerActividadesFinalizadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @return
     *     returns net.java.dev.jaxb.array.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerCategoriasRequest", output = "http://servidor/PublicadorActividades/obtenerCategoriasResponse")
    public StringArray obtenerCategorias();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws ActividadRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/PublicadorActividades/crearActividadRequest", output = "http://servidor/PublicadorActividades/crearActividadResponse", fault = {
        @FaultAction(className = ActividadRepetidaException_Exception.class, value = "http://servidor/PublicadorActividades/crearActividad/Fault/ActividadRepetidaException")
    })
    public void crearActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        double arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        StringArray arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9)
        throws ActividadRepetidaException_Exception
    ;

    /**
     * 
     * @return
     *     returns servidor.DataPaqueteActividadesArray
     * @throws NoExisteEntidadException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/obtenerPaquetesRequest", output = "http://servidor/PublicadorActividades/obtenerPaquetesResponse", fault = {
        @FaultAction(className = NoExisteEntidadException_Exception.class, value = "http://servidor/PublicadorActividades/obtenerPaquetes/Fault/NoExisteEntidadException")
    })
    public DataPaqueteActividadesArray obtenerPaquetes()
        throws NoExisteEntidadException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataActividadTuristica
     * @throws ActividadNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/PublicadorActividades/consultarActividadRequest", output = "http://servidor/PublicadorActividades/consultarActividadResponse", fault = {
        @FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://servidor/PublicadorActividades/consultarActividad/Fault/ActividadNoExisteException")
    })
    public DataActividadTuristica consultarActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws ActividadNoExisteException_Exception
    ;

}
